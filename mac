#!/bin/sh

# Welcome to the thoughtbot laptop script!
# Be prepared to turn your laptop (or desktop, no haters here)
# into an awesome development machine.

fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\n$fmt\n" "$@"
}

append_to_zshrc() {
  local text="$1" zshrc
  local skip_new_line="${2:-0}"

  if [ -w "$HOME/.zshrc.local" ]; then
    zshrc="$HOME/.zshrc.local"
  else
    zshrc="$HOME/.zshrc"
  fi

  if ! grep -Fqs "$text" "$zshrc"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\n" "$text" >> "$zshrc"
    else
      printf "\n%s\n" "$text" >> "$zshrc"
    fi
  fi
}

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

if [ ! -f "$HOME/.zshrc" ]; then
  touch "$HOME/.zshrc"
fi

# shellcheck disable=SC2016
append_to_zshrc 'export PATH="$HOME/.bin:$PATH"'

case "$SHELL" in
  */zsh) : ;;
  *)
    fancy_echo "Changing your shell to zsh ..."
      chsh -s "$(which zsh)"
    ;;
esac

#remove oh-my-zsh if present
if type "uninstall_oh_my_zsh" > /dev/null; then
  uninstall_oh_my_zsh
fi

# Install antigen
curl -L https://raw.githubusercontent.com/zsh-users/antigen/master/antigen.zsh > .antigen.zsh
# source .antigen.zsh
append_to_zshrc "source ~/.antigen.zsh"
# Load the oh-my-zsh's library.
append_to_zshrc "antigen use oh-my-zsh"

# Bundles from the default repo (robbyrussell's oh-my-zsh).
append_to_zshrc "antigen bundle git"
append_to_zshrc "antigen bundle brew"
append_to_zshrc "antigen bundle brew-cask"
append_to_zshrc "antigen bundle gem"
append_to_zshrc "antigen bundle osx"
append_to_zshrc "antigen bundle sublime"
append_to_zshrc "antigen bundle rbenv"
append_to_zshrc "antigen bundle ruby"
#append_to_zshrc "antigen bundle pyenv"
#append_to_zshrc "antigen bundle pip"

append_to_zshrc "antigen bundle zsh-users/zsh-history-substring-search"
append_to_zshrc "antigen bundle zsh-users/zsh-completions"
append_to_zshrc "antigen bundle zsh-users/zsh-syntax-highlighting"
append_to_zshrc "antigen bundle common-aliases"
append_to_zshrc "antigen bundle node"
append_to_zshrc "antigen bundle npm"
append_to_zshrc "antigen bundle heroku"

append_to_zshrc "antigen bundle vagrant"
#append_to_zshrc "antigen bundle docker"
#append_to_zshrc "antigen bundle packer"

append_to_zshrc "antigen bundle Tarrasch/zsh-autoenv"
append_to_zshrc "antigen bundle unixorn/autoupdate-antigen.zshplugin"
append_to_zshrc "antigen bundle rupa/z"

# Load the theme.
append_to_zshrc "antigen theme robbyrussell"
#append_to_zshrc "antigen bundle mafredri/zsh-async"
#append_to_zshrc "antigen bundle sindresorhus/pure"
# done
append_to_zshrc "antigen apply"

brew_install_or_upgrade() {
  if brew_is_installed "$1"; then
    if brew_is_upgradable "$1"; then
      fancy_echo "Upgrading %s ..." "$1"
      brew upgrade "$@"
    else
      fancy_echo "Already using the latest version of %s. Skipping ..." "$1"
    fi
  else
    fancy_echo "Installing %s ..." "$1"
    brew install "$@"
  fi
}

brew_cask_install_or_upgrade() {
    fancy_echo "Installing %s ..." "$1"
    brew cask install "$@"
}

brew_is_installed() {
  local name="$(brew_expand_alias "$1")"

  brew list -1 | grep -Fqx "$name"
}

brew_is_upgradable() {
  local name="$(brew_expand_alias "$1")"

  ! brew outdated --quiet "$name" >/dev/null
}

brew_tap() {
  brew tap "$1" 2> /dev/null
}

brew_expand_alias() {
  brew info "$1" 2>/dev/null | head -1 | awk '{gsub(/:/, ""); print $1}'
}

brew_launchctl_restart() {
  local name="$(brew_expand_alias "$1")"
  local domain="homebrew.mxcl.$name"
  local plist="$domain.plist"

  fancy_echo "Restarting %s ..." "$1"
  mkdir -p "$HOME/Library/LaunchAgents"
  ln -sfv "/usr/local/opt/$name/$plist" "$HOME/Library/LaunchAgents"

  if launchctl list | grep -Fq "$domain"; then
    launchctl unload "$HOME/Library/LaunchAgents/$plist" >/dev/null
  fi
  launchctl load "$HOME/Library/LaunchAgents/$plist" >/dev/null
}

gem_install_or_update() {
  if gem list "$1" --installed > /dev/null; then
    fancy_echo "Updating %s ..." "$1"
    gem update "$@"
  else
    fancy_echo "Installing %s ..." "$1"
    gem install "$@"
    rbenv rehash
  fi
}

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby

    append_to_zshrc '# recommended by brew doctor'

    # shellcheck disable=SC2016
    append_to_zshrc 'export PATH="/usr/local/bin:$PATH"' 1

    export PATH="/usr/local/bin:$PATH"
else
  fancy_echo "Homebrew already installed. Skipping ..."
fi

fancy_echo "Updating Homebrew formulas ..."
brew update

brew_install_or_upgrade 'zsh'
brew_install_or_upgrade 'git'
# brew_install_or_upgrade 'the_silver_searcher'
brew_install_or_upgrade 'reattach-to-user-namespace'
brew_install_or_upgrade 'imagemagick'
brew_install_or_upgrade 'hub'
brew_install_or_upgrade 'node'

brew_install_or_upgrade 'rbenv'
brew_install_or_upgrade 'ruby-build'

# shellcheck disable=SC2016
append_to_zshrc 'eval "$(rbenv init - --no-rehash zsh)"' 1

brew_install_or_upgrade 'openssl'
brew unlink openssl && brew link openssl --force
brew_install_or_upgrade 'libyaml'

ruby_version="$(curl -sSL http://ruby.thoughtbot.com/latest)"

eval "$(rbenv init - zsh)"

if ! rbenv versions | grep -Fq "$ruby_version"; then
  rbenv install -s "$ruby_version"
fi

rbenv global "$ruby_version"
rbenv shell "$ruby_version"

gem update --system

gem_install_or_update 'bundler'
gem_install_or_update 'foreman'
gem_install_or_update 'rubocop'

fancy_echo "Configuring Bundler ..."
  number_of_cores=$(sysctl -n hw.ncpu)
  bundle config --global jobs $((number_of_cores - 1))

brew_install_or_upgrade 'heroku-toolbelt'

if ! command -v rcup >/dev/null; then
  brew_tap 'thoughtbot/formulae'
  brew_install_or_upgrade 'rcm'
fi

brew_tap 'homebrew/binary'
brew_tap 'homebrew/completions'
brew_tap 'homebrew/dupes'

brew_tap 'caskroom/cask'
brew_tap 'caskroom/versions'
brew_install_or_upgrade 'brew-cask'

brew_cask_install_or_upgrade xquartz
brew_cask_install_or_upgrade dropbox
brew_cask_install_or_upgrade google-drive
brew_cask_install_or_upgrade iterm2
brew_cask_install_or_upgrade java
brew_cask_install_or_upgrade atom
brew_cask_install_or_upgrade flash
brew_cask_install_or_upgrade virtualbox
brew_cask_install_or_upgrade vagrant


# brew_cask_install_or_upgrade 1password
# brew_cask_install_or_upgrade iterm2

mkdir -p ~/Setting/Mac

append_to_zshrc "c() { cd ~/Setting/Mac/\$1; }
_c() { _files -W ~/Setting/Mac -/; }
compdef _c c"

  append_to_zshrc 'source ~/.zsh-alias'
  append_to_zshrc 'source ~/.token.local'


append_to_zshrc "alias be='bundle exec'"

npm install -g bower
npm install -g grunt

#Set a blazingly fast keyboard repeat rate
defaults write NSGlobalDomain KeyRepeat -int 0.02

#Set a shorter Delay until key repeat
defaults write NSGlobalDomain InitialKeyRepeat -int 12

#Add a context menu item for showing the Web Inspector in web views
defaults write NSGlobalDomain WebKitDeveloperExtras -bool true

#Show the ~/Library folder
chflags nohidden ~/Library



git config --global core.editor "subl -w"
git config --global color.ui true
git config --global push.default simple

if [ -f "$HOME/.laptop.local" ]; then
  . "$HOME/.laptop.local"
fi
